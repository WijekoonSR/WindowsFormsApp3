<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAA31JREFUaEPt
        mUtoE1EUhuNj4wMVVAQVXAkiootCw8ykNnUjuigu7EJBqVpnxj5EUUTdNBurCyO48FFwawstmErJ3GQa
        W6tdGFuFCoXWRUGlqaJUQXxQS8dzwwnE6ek0mcykI+SHD4bJ3P/8k9x7586Nr6SSSnJLxhJFjN1QJHYF
        T/w/OrY7vkqVWIciMoMDx9f5DeHH3pbi17fLEhvOhM8gi6xdLuteiZd5UxBUBn5lBzcxqlRoO/Fy70gV
        urdkd5kF+AbUh3yhpdh88dTk19bIUuwqBPqeFTA3hNgLaFuFVsVVgxjdpgisBYLwb5MOmDtJRdQOnxc6
        VqC9swoF+5bX+bWtqsD2q6J2jRqgDvFTFWIaDPazcoAF6vyJTTU1Hcswhn2B8aypUDGZwRj2BSbTJtNi
        8htj2Bc8Tb8SxpZcPJgwIvfHjKQ+kaYLji9V95LXLsAUxrAvMPlgMrWEh3/ZM2EMD3z6B37uwoEE2caC
        9xjDvsAEZgnSnIR/8+bwGR7dHSXbWJDEGPYFJp0mU0sGn6TI8JzBnhTZxoJOjGFfYBI2mVoy1DtJhucM
        JfK+gTDGsC9Z0M4RxvPS1fqWDM/Jtwvx2hjDvhQxupcyn4/Lh/rIQZzUU3kP4tOCVokx7IsvgcHsj9nc
        isw0yscD7zaRe2N2ZqCZ+mDfaoxRmMDslcm8GLzB8oULzO6YzN1HYA+wfOFSBO04WYSg+ehzoy08YvRH
        3hnJeCoNP26/OWI0H3lGtqGAxaOC5QtXQ3liPZhajoPGfbrlDJSBj42mKp30yGL2pKRvxvLOSBXZU6JQ
        msbKuKG3j5OBKfS28XQbygsZxLLOia/TiUJp+CxDBbXC8pngxlaMXNazFsx/zCkGUAFzgfICpvnLDJZ1
        VqqkPSQKkuFygfIColjOeSmB2B4o4Oobmusv+jAWHlOFHUFiA1jGPcmBqB+KufIrnJFYNZZxV/wpSQUo
        BL4jgfbuCx9sX8whCmBaFuI70L44gv56ighiD4G1oG1xBcVb54TJG01ftH1Svh0IIV7PDZUjEpt0fM2T
        r2qDkXUQxsZNaB/5fwlos7g6UaFthH48QgclmeIPRWzuDfGuwLfMibBmUjBllmMzb4nvZMOy+zYRGon1
        y8HuDXi5dwU3UQuBP2eFn5EFdsvz/5Fliy+/078GrG9UMb4LT5dUUkmOyuf7C8i6gGXP2XiuAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>